@page "/currency-conversion"

@using Converter_Web_Application.Service
@inject ICurrencyConversionService CurrencyConversionService
@inject TranslationService TranslationService

<PageTitle>@TranslationService.Translate("Currency_Conversion")</PageTitle>

<h2>@TranslationService.Translate("Currency_Conversion")</h2>

<!-- Explanatory Text -->
<div class="alert alert-info">
    @TranslationService.Translate("Currency_Conversion_Info")
</div>

<div class="container">
    <!-- Form for input values -->
    <div class="form-group spaced-form-group">
        <label for="amount">@TranslationService.Translate("Amount")</label>
        <input type="number" id="amount" @bind="amount" class="form-control" />
    </div>
    <div class="form-group spaced-form-group">
        <label for="fromCurrency">@TranslationService.Translate("From_Currency")</label>
        <select id="fromCurrency" class="form-control" @bind="fromCurrency">
            @foreach (var currency in supportedCurrencies)
            {
                <option value="@currency">@currency</option>
            }
        </select>
    </div>
    <div class="form-group spaced-form-group">
        <label for="toCurrency">@TranslationService.Translate("To_Currency")</label>
        <select id="toCurrency" class="form-control" @bind="toCurrency">
            @foreach (var currency in supportedCurrencies)
            {
                <option value="@currency">@currency</option>
            }
        </select>
    </div>
    <button class="btn btn-primary spaced-form-group" @onclick="ConvertCurrency">@TranslationService.Translate("Convert")</button>

    <!-- Display result -->
    <div class="form-group mt-3">
        <label for="resultValue">@TranslationService.Translate("Converted_Amount")</label>
        <input type="text" id="resultValue" @bind="result" class="form-control" readonly />
    </div>
</div>

@code {
    private decimal amount;
    private string fromCurrency = "USD";
    private string toCurrency = "EUR";
    private string? result;
    private readonly string[] supportedCurrencies = { "USD", "EUR", "GBP", "JPY", "CAD", "AUD", "RSD", "ALL", "ARS", "AUD", "BAM", "BGN", "BRL", "CNY", "CZK", "HRK", "HUF", "MKD", "MXN", "NOK", "RUB" };

    private async Task ConvertCurrency()
    {
        try
        {
            var convertedAmount = await CurrencyConversionService.ConvertCurrencyAsync(amount, fromCurrency, toCurrency);
            result = $"{convertedAmount:F2} {toCurrency}";
        }
        catch (Exception ex)
        {
            result = $"Error: {ex.Message}";
        }
    }

    // Translation changes
    protected override void OnInitialized()
    {
        TranslationService.OnLanguageChanged += StateHasChanged;
    }

    public void Dispose()
    {
        TranslationService.OnLanguageChanged -= StateHasChanged;
    }
}
